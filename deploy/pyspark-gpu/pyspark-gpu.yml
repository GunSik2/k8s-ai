apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-pvc
  namespace: jlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter
  namespace: jlab
  labels:
    name: jupyter
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jupyter
  template:
    metadata:
      labels:
        name: jupyter
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
      - name: jupyter
        image: cgshome2/pyspark-gpu-jupyter:v1.4_cuda-10.1_ubuntu-18.04
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8888
        env:
        - name: GRANT_SUDO
          value: "yes"
        command:
        - /bin/bash
        - -c
        - |
          chmod -R 777 /home/jovyan; 
          start.sh jupyter lab --user root --LabApp.token='password' --LabApp.ip='0.0.0.0' --LabApp.allow_root=True
        volumeMounts:
        - name: jupyter-data
          mountPath: /home/jovyan
        resources:
          requests:
            memory: 500Mi
            cpu: 250m
          limits:
            nvidia.com/gpu: 1
      restartPolicy: Always
      volumes:
      - name: jupyter-data
        persistentVolumeClaim:
          claimName: jupyter-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter
  namespace: jlab
  labels:
    name: jupyter
spec:
  ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: jupyter
    - port: 8501
      targetPort: 8501
      protocol: TCP
      name: streamlit
  selector:
    name: jupyter

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jupyter
  namespace: jlab
spec:
  rules:
  - host: jupyter.jlab.14.49.44.246.xip.io
    http:
      paths:
      - backend:
          serviceName: jupyter
          servicePort: 8888
